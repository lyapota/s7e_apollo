#!/sbin/busybox sh

cat << CTAG
{
    name:MISC,
    elements:[
    	{ SPane:{
		title:"TCP Congestion Control",
		description:" Select your preferred WIFI TCP algorithm. Regulates upload and download affecting throughput in various ways. Default is Westwood+."
    	}},
	{ SDescription:{
		description:""
	}},
	{ SOptionList:{
		default:`cat /proc/sys/net/ipv4/tcp_congestion_control`,
		action:"generic /proc/sys/net/ipv4/tcp_congestion_control",
		values:[`while read values; do busybox printf "%s, \n" $values; done < /proc/sys/net/ipv4/tcp_available_congestion_control`]
	}},
	{ SPane:{
            title:"Wakelock control",
            description:"Enter 1 to 8 (1 = stock, higher = lower wake time) for wlan_rx and wlan_ctrl wakelock control."
   	}},
	{ SDescription:{
		description:""
	}},
    	{ SSeekBar:{
            title:"Wireless wakelock timeout control",
            description:"",
            unit:"",
            min:1,
            max:8,
            step:1,
            default:`cat /sys/module/dhd/parameters/wakelock_timeout`,
            action:"generic /sys/module/dhd/parameters/wakelock_timeout"
    	}},
	{ SPane:{
	title:"Dynamic FSYNC Driver",
	description:"While screen is on file sync is disabled, when screen is off a file sync is called to flush all outstanding writes and restore file sync operation as normal."
	}},
	{ SOptionList:{
		label:"Enable or disable dynamic fsync",
		description:"Default On",
		default:`cat /sys/kernel/dyn_fsync/Dyn_fsync_active`,
		action:"generic /sys/kernel/dyn_fsync/Dyn_fsync_active",
		values:{
			"0":"Disabled",
			"1":"Enabled",
			}
	}},
  	{ SDescription:{
  		description:""
  	}},
	{ SPane:{
		title:" CRC Settings",
		description:"\n\tEnabling software CRCs on the data blocks can be a significant (30%) performance cost, and for other reasons may not always be desired. CRC is a mechanism aiming to prevent data corruption when enabled (reduce the performance around 30%). So if you disable it (improve the performance), there may be a chance you run into problems. Use it at your risk.\n\n",
	}},
        { SOptionList:{
       		title:"Enable or disable CRC.",
			description:"Default Off",
			default:`cat /sys/module/mmc_core/parameters/use_spi_crc`,
			action:"generic /sys/module/mmc_core/parameters/use_spi_crc",
			values:{
				"N":"Disabled",
				"Y":"Enabled",
			}
	}},
	{ SPane:{
		title:"Gentle Fair Sleepers",
		description:" Sleeper Fairness is a concept used by CFS which treat sleeping/waiting tasks as if they were in a run queue. This implies tasks which spend most of the time waiting for an user input and such will get a fair share of CPU when they need it. Disabling Gentle Fair Sleepers could improve UI responsiveness. Default is Disabled."
	}},
      	{ SDescription:{
		description:""
	}},
	{ SCheckBox:{
		label:"Enable or Disable Gentle Fair Sleepers",
		default:`cat /sys/kernel/sched/gentle_fair_sleepers`,
		action:"generic /sys/kernel/sched/gentle_fair_sleepers"
	}},
	{ SDescription:{
  		description:""
	}},
	{ SPane:{
		title:"Kernel Entropy"
      	}},
	{ SDescription:{
		description:""
	}},
	{ SLiveLabel:{
		title:"Entropy Available",
		refresh:1000,
		action:"live entropy"
	}},
	{ SSeekBar:{
		title:"Read Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/read_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/read_wakeup_threshold"
	}},
	{ SSeekBar:{
		title:"Write Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/write_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/write_wakeup_threshold"
	}},
    ]
}
CTAG
